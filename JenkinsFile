pipeline {
    agent any
    
    environment {
        GIT_REPO_URL = 'https://github.com/anirudhpratapsingh/PhysicsGalaxy.git'
        WEB_SERVER_HOST = '10.0.1.66'
	AWS_DEFAULT_REGION = 'ap-south-1'
        S3_BUCKET = 'artifacts-prod1'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    def gitResult = git branch: 'main', credentialsId: 'github', url: env.GIT_REPO_URL, returnStatus: true
                    def gitExitCode = gitResult.GIT_BRANCH ? 0 : 1
                    echo "Git checkout exit code: ${gitExitCode}"

                    if (gitExitCode != 0) {
                        error('Git checkout failed')
                    }
                }
            }
        }
        
        stage('Install dependencies') {
            steps {
	        script {

                sh 'npm install'

		}
            }
        }

        stage('Build') {
            steps {
                script {
                  
		  sh "npm run build"

                }
            }
        }


        stage('Upload Artifacts to S3') {
    steps {
        dir('/var/lib/jenkins/workspace/PhysicsGalaxy') {
            // Log current directory
            pwd()

            // Inside this block, you can perform operations related to the current directory
            withAWS(region:'ap-south-1', credentials:'Accesskeys') {
                // Log AWS credentials
                def identity = awsIdentity();

                // Upload files from working directory 'dist' in your project workspace
                s3Upload(bucket: "artifacts-prod1", workingDir: 'dist')
            }
        }
    }
}


        stage('Test') {
            steps {
                script {
                echo "hello"
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                withCredentials([
                    sshUserPrivateKey(credentialsId: 'webserver-key', keyFileVariable: 'SSH_KEY_FILE', usernameVariable: 'SSH_USERNAME'),
                   //  [
                   //     $class: 'AmazonWebServicesCredentialsBinding',
                   //     accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                   //     secretKeyVariable: 'AWS_SECRET_ACCESS_KEY',
                   //     credentialsId: 'Accesskeys'
                   // ]

                ]) {
                    script {
                        // Variables
                        def buildArtifactsPath = '/var/lib/jenkins/workspace/PhysicsGalaxy/*'

                        // Removing existing files on the web server
                        sh "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${SSH_KEY_FILE} ${SSH_USERNAME}@${env.WEB_SERVER_HOST} 'rm -rf /var/www/physicsgalaxy.com/*'"

                        // Creating dirctory for deploying the code 
                        sh "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${SSH_KEY_FILE} ${SSH_USERNAME}@${env.WEB_SERVER_HOST} 'sudo mkdir -p /var/www/physicsgalaxy.com/'"

                        // Changing Owner for the directory created
                        sh "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${SSH_KEY_FILE} ${SSH_USERNAME}@${env.WEB_SERVER_HOST} 'sudo chown ubuntu:ubuntu /var/www/physicsgalaxy.com'"

                        // Copying files from Jenkins to web server
                        sh "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${SSH_KEY_FILE} -r ${buildArtifactsPath} ${SSH_USERNAME}@${env.WEB_SERVER_HOST}:/var/www/physicsgalaxy.com/"
			// Moving files from the dist folder
                        sh "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${SSH_KEY_FILE} ${SSH_USERNAME}@${env.WEB_SERVER_HOST} 'sudo mv /var/www/physicsgalaxy.com/dist/* /var/www/physicsgalaxy.com'"

			// Upload artifacts to S3
                        //sh "aws s3 sync /var/lib/jenkins/workspace/PhysicsGalaxy/dist s3://${env.S3_BUCKET}/"
                    }
                }
            }
        }
    }
}
